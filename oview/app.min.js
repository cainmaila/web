!function(){"use strict";function e(e){v=!0,P=e.data.global.x,X=P}function n(e){v=!1}function t(e){P=e.data.global.x}function o(){requestAnimationFrame(I),a.render(u)}function i(){requestAnimationFrame(I),a.render(u),x.texture=m[f].texture,a.render(u),f++,f===h&&(f=0,I=r,x.interactive=!0)}function r(e){requestAnimationFrame(I),v&&(C=X-P,y=C,X=P),y*=c,b+=y*s,A=~~b,b-=A,b>0&&b<w?b=0:b<0&&b>-w&&(b=0),f+=A,f%=h,f=f<0?h+f:f,x.texture=m[~~f].texture,a.render(u)}function d(e){var n=window.innerWidth,t=window.innerHeight;a.view.style.width=n+"px",a.view.style.height=t+"px",x.width=n,x.scale.y=x.scale.x,a.resize(n,t)}d();var a=new PIXI.autoDetectRenderer(window.innerWidth,window.innerHeight,{backgroundColor:268435455}),u=new PIXI.Container,l=new PIXI.loaders.Loader,c=.98,s=-.05,w=.1,h=48,f=1,g="",x=null,m=null,p=null,I=o,v=!1,y=0,C=0,P=0,X=0,b=0,A=0;for(document.body.appendChild(a.view),x=new PIXI.Sprite,u.addChild(x),p=new PIXI.Text("loading...",{fontFamily:"Arial",fontSize:24,fill:16715792,align:"center"}),u.addChild(p),I();f<=48;)g=2===(""+f).length?"0"+f:"00"+f,l.add(""+(f-1),"./photos/"+g+".jpg"),f++;l.on("progress",function(e){p.text="loading... "+~~e.progress+"%"}).load(function(o,r){I=i,p.text="",m=r,f=0,x.texture=m[f].texture,x.on("mousedown",e),x.on("mouseup",n),x.on("mousemove",t),x.on("touchstart",e),x.on("touchend",n),x.on("touchmove",t),window.onresize=d}),console.log("v2")}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjpudWxsLCJzb3VyY2VzIjpbIi4uL3NyYy9hcHAuanMiXSwic291cmNlc0NvbnRlbnQiOlsiIG9ucmVzaXplKCk7XHJcbiBjb25zdCByZW5kZXJlciA9IG5ldyBQSVhJLmF1dG9EZXRlY3RSZW5kZXJlcih3aW5kb3cuaW5uZXJXaWR0aCwgd2luZG93LmlubmVySGVpZ2h0LCB7IGJhY2tncm91bmRDb2xvcjogMHhGRkZGRkZGIH0pO1xyXG4gY29uc3Qgc3RhZ2UgPSBuZXcgUElYSS5Db250YWluZXIoKTtcclxuIGNvbnN0IGxvYWRlciA9IG5ldyBQSVhJLmxvYWRlcnMuTG9hZGVyKCk7XHJcbiBjb25zdCBHID0gMC45ODsgLyog56Oo5pOm5YqbICovXHJcbiBjb25zdCBTQyA9IC0wLjA1OyAvKiDkupLli5XmhJ/luqYgKi9cclxuIGNvbnN0IEVORF9EID0gMC4xOyAvKiDntZDlsL7lvbHmoLzvvIzmhIjlpKfotorlv6vntZDmnZ/vvIzop6Pmsbrli5XmhYvmnIDlvozot7PmoLzllY/poYwgKi9cclxuIGNvbnN0IElNQUdFX05VTSA9IDQ4OyAvKiDlnJbmlbjph48gKi9cclxuXHJcbiBsZXQga2V5ID0gMTtcclxuIGxldCBmaWxlID0gJyc7XHJcbiBsZXQgdmlldyA9IG51bGw7XHJcbiBsZXQgdGV4dHVyZUxpc3QgPSBudWxsO1xyXG4gbGV0IHRleHQgPSBudWxsO1xyXG4gbGV0IGFuaW1hdGUgPSBsb2FkaW5nQW5pbWF0ZTtcclxuIGxldCBpc1BlbiA9IGZhbHNlO1xyXG5cclxuIC8qIOWLleaFi+ioiOeul+eUqCAqL1xyXG4gbGV0IHYgPSAwO1xyXG4gbGV0IGEgPSAwO1xyXG4gbGV0IHggPSAwO1xyXG4gbGV0IG9sZF94ID0gMDtcclxuIGxldCBkID0gMDtcclxuIGxldCBhZGRfZCA9IDA7XHJcblxyXG5cclxuIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQocmVuZGVyZXIudmlldyk7XHJcblxyXG4gdmlldyA9IG5ldyBQSVhJLlNwcml0ZSgpO1xyXG4gc3RhZ2UuYWRkQ2hpbGQodmlldyk7XHJcbiB0ZXh0ID0gbmV3IFBJWEkuVGV4dCgnbG9hZGluZy4uLicsIHsgZm9udEZhbWlseTogJ0FyaWFsJywgZm9udFNpemU6IDI0LCBmaWxsOiAweGZmMTAxMCwgYWxpZ246ICdjZW50ZXInIH0pO1xyXG4gc3RhZ2UuYWRkQ2hpbGQodGV4dCk7XHJcbiBhbmltYXRlKCk7XHJcblxyXG4gd2hpbGUgKGtleSA8PSA0OCkge1xyXG4gICAgIGZpbGUgPSAoJycgKyBrZXkpLmxlbmd0aCA9PT0gMiA/ICcwJyArIGtleSA6ICcwMCcgKyBrZXk7XHJcbiAgICAgbG9hZGVyLmFkZCgnJyArIChrZXkgLSAxKSwgJy4vcGhvdG9zLycgKyBmaWxlICsgJy5qcGcnKTtcclxuICAgICBrZXkrKztcclxuIH1cclxuXHJcbiBsb2FkZXIub24oXCJwcm9ncmVzc1wiLCAoZSkgPT4ge1xyXG4gICAgIHRleHQudGV4dCA9ICdsb2FkaW5nLi4uICcgKyB+fmUucHJvZ3Jlc3MgKyAnJSc7XHJcbiB9KS5sb2FkKChsb2FkZXIsIHJlc291cmNlcykgPT4ge1xyXG4gICAgIGFuaW1hdGUgPSByZWxvYWRJbWFnZUFuaW1hdGU7XHJcbiAgICAgdGV4dC50ZXh0ID0gJyc7XHJcbiAgICAgdGV4dHVyZUxpc3QgPSByZXNvdXJjZXM7XHJcbiAgICAga2V5ID0gMDtcclxuICAgICB2aWV3LnRleHR1cmUgPSB0ZXh0dXJlTGlzdFtrZXldLnRleHR1cmU7XHJcbiAgICAgdmlldy5vbignbW91c2Vkb3duJywgZG93bkl0KTtcclxuICAgICB2aWV3Lm9uKCdtb3VzZXVwJywgdXBJdCk7XHJcbiAgICAgdmlldy5vbignbW91c2Vtb3ZlJywgbW92ZUl0KTtcclxuICAgICB2aWV3Lm9uKCd0b3VjaHN0YXJ0JywgZG93bkl0KTtcclxuICAgICB2aWV3Lm9uKCd0b3VjaGVuZCcsIHVwSXQpO1xyXG4gICAgIHZpZXcub24oJ3RvdWNobW92ZScsIG1vdmVJdCk7XHJcbiAgICAgd2luZG93Lm9ucmVzaXplID0gb25yZXNpemU7XHJcbiB9KTtcclxuXHJcbiBmdW5jdGlvbiBkb3duSXQoZSkge1xyXG4gICAgIGlzUGVuID0gdHJ1ZTtcclxuICAgICB4ID0gZS5kYXRhLmdsb2JhbC54O1xyXG4gICAgIG9sZF94ID0geDtcclxuIH1cclxuXHJcbiBmdW5jdGlvbiB1cEl0KGUpIHtcclxuICAgICBpc1BlbiA9IGZhbHNlO1xyXG4gfVxyXG5cclxuIGZ1bmN0aW9uIG1vdmVJdChlKSB7XHJcbiAgICAgeCA9IGUuZGF0YS5nbG9iYWwueDtcclxuIH1cclxuXHJcbiBmdW5jdGlvbiBsb2FkaW5nQW5pbWF0ZSgpIHtcclxuICAgICByZXF1ZXN0QW5pbWF0aW9uRnJhbWUoYW5pbWF0ZSk7XHJcbiAgICAgcmVuZGVyZXIucmVuZGVyKHN0YWdlKTtcclxuIH1cclxuXHJcbiBmdW5jdGlvbiByZWxvYWRJbWFnZUFuaW1hdGUoKSB7XHJcbiAgICAgcmVxdWVzdEFuaW1hdGlvbkZyYW1lKGFuaW1hdGUpO1xyXG4gICAgIHJlbmRlcmVyLnJlbmRlcihzdGFnZSk7XHJcbiAgICAgdmlldy50ZXh0dXJlID0gdGV4dHVyZUxpc3Rba2V5XS50ZXh0dXJlO1xyXG4gICAgIHJlbmRlcmVyLnJlbmRlcihzdGFnZSk7XHJcbiAgICAga2V5Kys7XHJcbiAgICAgaWYgKGtleSA9PT0gSU1BR0VfTlVNKSB7XHJcbiAgICAgICAgIGtleSA9IDA7XHJcbiAgICAgICAgIGFuaW1hdGUgPSBhbmltYXRlRW5kO1xyXG4gICAgICAgICB2aWV3LmludGVyYWN0aXZlID0gdHJ1ZTtcclxuICAgICB9XHJcbiB9XHJcblxyXG4gZnVuY3Rpb24gYW5pbWF0ZUVuZCh0KSB7XHJcbiAgICAgcmVxdWVzdEFuaW1hdGlvbkZyYW1lKGFuaW1hdGUpO1xyXG4gICAgIGlmIChpc1Blbikge1xyXG4gICAgICAgICBhID0gb2xkX3ggLSB4O1xyXG4gICAgICAgICB2ID0gYTtcclxuICAgICAgICAgb2xkX3ggPSB4O1xyXG4gICAgIH1cclxuICAgICB2ICo9IEc7XHJcbiAgICAgZCA9IGQgKyB2ICogU0M7XHJcbiAgICAgYWRkX2QgPSB+fmQ7XHJcbiAgICAgZCA9IChkIC0gYWRkX2QpO1xyXG4gICAgIGlmIChkID4gMCAmJiBkIDwgRU5EX0QpIHtcclxuICAgICAgICAgZCA9IDA7XHJcbiAgICAgfSBlbHNlIGlmIChkIDwgMCAmJiBkID4gLUVORF9EKSB7XHJcbiAgICAgICAgIGQgPSAwO1xyXG4gICAgIH1cclxuICAgICBrZXkgKz0gYWRkX2Q7XHJcbiAgICAga2V5ICU9IElNQUdFX05VTTtcclxuICAgICBrZXkgPSBrZXkgPCAwID8gSU1BR0VfTlVNICsga2V5IDoga2V5O1xyXG4gICAgIHZpZXcudGV4dHVyZSA9IHRleHR1cmVMaXN0W35+a2V5XS50ZXh0dXJlO1xyXG4gICAgIHJlbmRlcmVyLnJlbmRlcihzdGFnZSk7XHJcbiB9XHJcblxyXG4gZnVuY3Rpb24gb25yZXNpemUoZXZlbnQpIHtcclxuICAgICB2YXIgdyA9IHdpbmRvdy5pbm5lcldpZHRoO1xyXG4gICAgIHZhciBoID0gd2luZG93LmlubmVySGVpZ2h0O1xyXG4gICAgIHJlbmRlcmVyLnZpZXcuc3R5bGUud2lkdGggPSB3ICsgXCJweFwiO1xyXG4gICAgIHJlbmRlcmVyLnZpZXcuc3R5bGUuaGVpZ2h0ID0gaCArIFwicHhcIjtcclxuICAgICB2aWV3LndpZHRoID0gdztcclxuICAgICB2aWV3LnNjYWxlLnkgPSB2aWV3LnNjYWxlLng7XHJcbiAgICAgcmVuZGVyZXIucmVzaXplKHcsIGgpO1xyXG4gfVxyXG4gY29uc29sZS5sb2coJ3YyJyk7XHJcbiJdLCJuYW1lcyI6WyJkb3duSXQiLCJlIiwiZGF0YSIsImdsb2JhbCIsIngiLCJ1cEl0IiwibW92ZUl0IiwibG9hZGluZ0FuaW1hdGUiLCJhbmltYXRlIiwicmVuZGVyIiwic3RhZ2UiLCJyZWxvYWRJbWFnZUFuaW1hdGUiLCJ0ZXh0dXJlIiwidGV4dHVyZUxpc3QiLCJrZXkiLCJJTUFHRV9OVU0iLCJhbmltYXRlRW5kIiwiaW50ZXJhY3RpdmUiLCJ0IiwiaXNQZW4iLCJvbGRfeCIsImEiLCJHIiwidiIsIlNDIiwiZCIsImFkZF9kIiwiRU5EX0QiLCJvbnJlc2l6ZSIsImV2ZW50IiwidyIsIndpbmRvdyIsImlubmVyV2lkdGgiLCJoIiwiaW5uZXJIZWlnaHQiLCJ2aWV3Iiwic3R5bGUiLCJ3aWR0aCIsImhlaWdodCIsInNjYWxlIiwieSIsInJlc2l6ZSIsInJlbmRlcmVyIiwiUElYSSIsImF1dG9EZXRlY3RSZW5kZXJlciIsImJhY2tncm91bmRDb2xvciIsIkNvbnRhaW5lciIsImxvYWRlciIsImxvYWRlcnMiLCJMb2FkZXIiLCJmaWxlIiwidGV4dCIsImRvY3VtZW50IiwiYm9keSIsImFwcGVuZENoaWxkIiwiU3ByaXRlIiwiYWRkQ2hpbGQiLCJUZXh0IiwiZm9udEZhbWlseSIsImZvbnRTaXplIiwiZmlsbCIsImFsaWduIiwibGVuZ3RoIiwiYWRkIiwib24iLCJwcm9ncmVzcyIsImxvYWQiLCJyZXNvdXJjZXMiLCJjb25zb2xlIiwibG9nIl0sIm1hcHBpbmdzIjoid0JBeURDLFNBQVNBLEdBQU9DLE1BQ0osSUFDSkEsRUFBRUMsS0FBS0MsT0FBT0MsSUFDVkEsRUFHWixRQUFTQyxHQUFLSixNQUNGLEVBR1osUUFBU0ssR0FBT0wsS0FDUkEsRUFBRUMsS0FBS0MsT0FBT0MsRUFHdEIsUUFBU0csMkJBQ2lCQyxLQUNiQyxPQUFPQyxHQUdwQixRQUFTQywyQkFDaUJILEtBQ2JDLE9BQU9DLEtBQ1hFLFFBQVVDLEVBQVlDLEdBQUtGLFVBQ3ZCSCxPQUFPQyxPQUVaSSxJQUFRQyxNQUNGLElBQ0lDLElBQ0xDLGFBQWMsR0FJM0IsUUFBU0QsR0FBV0UseUJBQ01WLEdBQ2xCVyxNQUNJQyxFQUFRaEIsSUFDUmlCLElBQ0lqQixNQUVQa0IsS0FDR0MsRUFBSUMsTUFDRkMsS0FDREMsRUFDTEQsRUFBSSxHQUFLQSxFQUFJRSxJQUNULEVBQ0dGLEVBQUksR0FBS0EsR0FBS0UsTUFDakIsTUFFREQsS0FDQVgsSUFDREQsRUFBTSxFQUFJQyxFQUFZRCxFQUFNQSxJQUM3QkYsUUFBVUMsSUFBY0MsR0FBS0YsVUFDekJILE9BQU9DLEdBR3BCLFFBQVNrQixHQUFTQyxNQUNWQyxHQUFJQyxPQUFPQyxXQUNYQyxFQUFJRixPQUFPRyxjQUNOQyxLQUFLQyxNQUFNQyxNQUFRUCxFQUFJLE9BQ3ZCSyxLQUFLQyxNQUFNRSxPQUFTTCxFQUFJLE9BQzVCSSxNQUFRUCxJQUNSUyxNQUFNQyxFQUFJTCxFQUFLSSxNQUFNbkMsSUFDakJxQyxPQUFPWCxFQUFHRyxHQXZIdkJMLEdBQ0EsSUFBTWMsR0FBVyxHQUFJQyxNQUFLQyxtQkFBbUJiLE9BQU9DLFdBQVlELE9BQU9HLGFBQWVXLGdCQUFpQixZQUNqR25DLEVBQVEsR0FBSWlDLE1BQUtHLFVBQ2pCQyxFQUFTLEdBQUlKLE1BQUtLLFFBQVFDLE9BQzFCM0IsRUFBSSxJQUNKRSxHQUFLLElBQ0xHLEVBQVEsR0FDUlosRUFBWSxHQUVkRCxFQUFNLEVBQ05vQyxFQUFPLEdBQ1BmLEVBQU8sS0FDUHRCLEVBQWMsS0FDZHNDLEVBQU8sS0FDUDNDLEVBQVVELEVBQ1ZZLEdBQVEsRUFHUkksRUFBSSxFQUNKRixFQUFJLEVBQ0pqQixFQUFJLEVBQ0pnQixFQUFRLEVBQ1JLLEVBQUksRUFDSkMsRUFBUSxDQVdaLEtBUkEwQixTQUFTQyxLQUFLQyxZQUFZWixFQUFTUCxNQUVuQ0EsRUFBTyxHQUFJUSxNQUFLWSxPQUNoQjdDLEVBQU04QyxTQUFTckIsR0FDZmdCLEVBQU8sR0FBSVIsTUFBS2MsS0FBSyxjQUFnQkMsV0FBWSxRQUFTQyxTQUFVLEdBQUlDLEtBQU0sU0FBVUMsTUFBTyxXQUMvRm5ELEVBQU04QyxTQUFTTCxHQUNmM0MsSUFFT00sR0FBTyxNQUNtQixLQUFyQixHQUFLQSxHQUFLZ0QsT0FBZSxJQUFNaEQsRUFBTSxLQUFPQSxJQUM3Q2lELElBQUksSUFBTWpELEVBQU0sR0FBSSxZQUFjb0MsRUFBTyxXQUlwREgsR0FBT2lCLEdBQUcsV0FBWSxTQUFDL0QsS0FDZGtELEtBQU8sZ0JBQWtCbEQsRUFBRWdFLFNBQVcsTUFDNUNDLEtBQUssU0FBQ25CLEVBQVFvQixLQUNIeEQsSUFDTHdDLEtBQU8sS0FDRWdCLElBQ1IsSUFDRHZELFFBQVVDLEVBQVlDLEdBQUtGLFVBQzNCb0QsR0FBRyxZQUFhaEUsS0FDaEJnRSxHQUFHLFVBQVczRCxLQUNkMkQsR0FBRyxZQUFhMUQsS0FDaEIwRCxHQUFHLGFBQWNoRSxLQUNqQmdFLEdBQUcsV0FBWTNELEtBQ2YyRCxHQUFHLFlBQWExRCxVQUNkc0IsU0FBV0EsSUFtRXRCd0MsUUFBUUMsSUFBSSJ9
